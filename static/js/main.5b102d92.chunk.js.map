{"version":3,"sources":["config.js","components/Search.js","components/Nav.js","components/Header.js","components/Image.js","components/NoPics.js","components/Gallery.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","Search","handleSubmit","e","preventDefault","searchQuery","_this","search","value","props","newSearch","currentTarget","reset","path","concat","history","push","_this2","this","react_default","a","createElement","className","onSubmit","type","name","placeholder","ref","input","required","autoFocus","fill","height","viewBox","width","xmlns","d","Component","withRouter","Nav","react_router_dom","to","Header","_ref","components_Search","components_Nav","Image","farm","server","id","secret","title","src","alt","NoPics","Gallery","pics","searchWord","pictures","query","length","map","pic","components_Image","key","components_NoPics","NotFound","App","state","loading","searchTerm","results","mountainResults","dogResults","sunsetResults","performSearch","arguments","undefined","setState","fetch","then","response","json","responseData","photos","photo","catch","error","console","log","components_Header","react_router","exact","render","components_Gallery","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b102d92.chunk.js","sourcesContent":["const apiKey = \"5638f8488708cb49428b5c57d2492209\";\nexport default apiKey;","import React, { Component } from \"react\";\n// Need to import withRouter to access history\nimport { withRouter } from 'react-router-dom';\n\n\nclass Search extends Component {\n\t\n\t// When form is submitted\n\thandleSubmit = (e) => {\n\t\t// Prevent default form submission\n\t\te.preventDefault();\n\t\tlet searchQuery = this.search.value;\n\t\t// Pass search query to performSearch function in App.js\n\t\tthis.props.newSearch(searchQuery);\n\t\t// Reset input field value\n\t\te.currentTarget.reset();\n\n\t\tlet path = `/search/${searchQuery}`;\n\t\t// Push new entry onto history stack (list of previously visited URLs)\n\t\t// which allows us to programmatically change the URL\n\t\tthis.props.history.push(path);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"search-form\" onSubmit={this.handleSubmit}>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"search\" \n\t\t\t\t\tname=\"Search\" \n\t\t\t\t\tplaceholder=\"Search\" \n\t\t\t\t\tref={ (input) => this.search = input }\n\t\t\t\t\trequired \n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\" className=\"search-button\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\tfill=\"#fff\"\n\t\t\t\t\t\theight=\"24\"\n\t\t\t\t\t\tviewBox=\"0 0 23 23\"\n\t\t\t\t\t\twidth=\"24\"\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n\t\t\t\t\t\t<path d=\"M0 0h24v24H0z\" fill=\"none\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t);\n\t}\n};\n\n// Use withRouter\nexport default withRouter (Search);","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\n\nconst Nav = () => {\n\n  return (\n    <nav className=\"main-nav\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink to=\"/mountains\">Mountains</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink to=\"/dogs\">Dogs</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink to=\"/sunset\">Sunset</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\n// Import components\nimport Search from './Search';\nimport Nav from './Nav';\n\n\nconst Header = ({ newSearch }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Search newSearch={newSearch} />\n\t\t\t<Nav />\n\t\t</div>\n\t)\n};\n\nexport default Header;","import React from \"react\";\n\n\nconst Image = ({ farm, server, id, secret, title }) => {\n\treturn (\n\t\t<li>\n\t\t\t<img \n\t\t\t\tsrc={`https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`}\n\t\t\t\talt={title} />\n\t\t</li>\n\t)\n};\n\nexport default Image;","import React from \"react\";\n\n// Component for no images returned from API request\nconst NoPics = () => {\n  return (\n    <li className=\"not-found\">\n      <h3>No Results Found</h3>\n      <p>Your search did not return any results. Please try again.</p>\n    </li>\n  );\n};\n\nexport default NoPics;\n","import React from \"react\";\n\n// Import components\nimport Image from \"./Image\";\nimport NoPics from \"./NoPics\";\n\n\nconst Gallery = ({ pictures, query }) => {\n\n\tlet pics;\n\t// If array is not empty, iterate over it\n\tif(pictures.length > 0) {\n\t\tpics = pictures.map( pic => (\n\t\t\t<Image \n\t\t\t\tfarm={pic.farm}\n\t\t\t\tserver={pic.server}\n\t\t\t\tid={pic.id}\n\t\t\t\tsecret={pic.secret}\n\t\t\t\tkey={pic.id}\n\t\t\t\ttitle={pic.title}\n\t\t\t/>\n\t\t));\n\t} else {\n\t\t// If array is empty, display NoPics component\n\t\tpics = <NoPics />\n\t};\n\n\tlet searchWord;\n\t// If query string is not empty, display it\n\tif(query.length > 0) {\n\t\tsearchWord = `Image results for: \"${query}\"`\n\t} else {\n\t\t// If query string is empty, do not show it\n\t\tsearchWord = '';\n\t};\n\n  return (\n    <div className=\"photo-container\">\n\n\t\t\t{/* Render image results header */}\n      <h2>{searchWord}</h2>\n\n\t\t\t{/* Render images */}\n      <ul>{pics}</ul>\n\t\t\t\n    </div>\n  );\n};\n\nexport default Gallery;","import React from \"react\";\n\n// Component for 404 errors\nconst NotFound = () => {\n  return (\n    <li className=\"not-found\">\n      <h3>The page your requested does not exist</h3>\n    </li>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { \n\tBrowserRouter,\n\tRoute,\n\tSwitch,\n\tRedirect\n} from 'react-router-dom';\nimport './App.css';\nimport apiKey from './config.js';\n\n// Import components\nimport Header from './components/Header';\nimport Gallery from './components/Gallery';\nimport NotFound from './components/NotFound';\n\n\nclass App extends Component {\n  state = {\n    loading: true,\n\t\tsearchTerm: \"\",\n\t\tresults: [],\n\t\tmountainResults: [],\n\t\tdogResults: [],\n\t\tsunsetResults: []\n  };\n\n\t// Trigger API requests for tabbed topics after App component is mounted\n  componentDidMount() {\n\t\tthis.performSearch('mountains')\n\t\tthis.performSearch('dogs')\n\t\tthis.performSearch('sunset')\n  }\n\n\t// Perform API request for photos and update state\n  performSearch = (query = 'mountains') => {\n\t\tthis.setState({\n\t\t\tloading: true\n\t\t});\n  \tfetch(\n      `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&sort=relevance&format=json&nojsoncallback=1`\n    )\n      .then(response => response.json())\n      .then(responseData => {\n\t\t\t\t// Update state based on query\n\t\t\t\tif(query === 'mountains') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmountainResults: responseData.photos.photo,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t} else if (query === 'dogs') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdogResults: responseData.photos.photo,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t} else if (query === 'sunset') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsunsetResults: responseData.photos.photo,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tresults: responseData.photos.photo,\n\t\t\t\t\t\tsearchTerm: query,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t}\n      })\n      .catch(error => console.log(\"Error fetching or parsing data\", error));\n  }\n\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header newSearch={this.performSearch} />\n\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{/* Redirect root path to /mountains */}\n\t\t\t\t\t\t<Route exact path=\"/\" render={ () =>\n\t\t\t\t\t\t\t<Redirect to='/mountains' />\n\t\t\t\t\t\t} />\n\n\t\t\t\t\t\t<Route exact path=\"/mountains\" render={ () =>\n\t\t\t\t\t\t\t(this.state.loading) \n\t\t\t\t\t\t\t? <p>Loading...</p>\n\t\t\t\t\t\t\t: <Gallery pictures={this.state.mountainResults} query='mountains' />\n\t\t\t\t\t\t} />\n\t\t\t\t\t\t<Route exact path=\"/dogs\" render={ () =>\n\t\t\t\t\t\t\t(this.state.loading) \n\t\t\t\t\t\t\t? <p>Loading...</p>\n\t\t\t\t\t\t\t: <Gallery pictures={this.state.dogResults} query='dogs' />\n\t\t\t\t\t\t} />\n\t\t\t\t\t\t<Route exact path=\"/sunset\" render={ () =>\n\t\t\t\t\t\t\t(this.state.loading) \n\t\t\t\t\t\t\t? <p>Loading...</p>\n\t\t\t\t\t\t\t: <Gallery pictures={this.state.sunsetResults} query='sunset' />\n\t\t\t\t\t\t} />\n\n\t\t\t\t\t\t{/* Route for search queries */}\n\t\t\t\t\t\t<Route path=\"/search/:topic\" render={ () =>\n\t\t\t\t\t\t\t(this.state.loading) \n\t\t\t\t\t\t\t? <p>Loading...</p>\n\t\t\t\t\t\t\t: <Gallery pictures={this.state.results} query={this.state.searchTerm} />\n\t\t\t\t\t\t} />\n\n\n\t\t\t\t\t\t{/* Route for 404 error */}\n\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t</Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}